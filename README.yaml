name: Terraform MongoDB Atlas Users Management Module
#logo: logo/logo.jpg

license: "APACHE2"

copyrights:
  - name: "Cloud Ops Works LLC"
    url: "https://cloudops.works"
    year: "2024"

github_repo: cloudopsworks/terraform-module-mongoatlas-users

description: |-
  MongoDB Atlas Users Management Module provides comprehensive user management capabilities for MongoDB Atlas clusters. It features automated password rotation, role-based access control, and secure credential management through AWS KMS integration. The module supports multiple user configurations, custom rotation periods, and specialized scopes for precise access control.

# Introduction to the project
introduction: |-
  This Terraform module provides a robust solution for managing MongoDB Atlas users and their security configurations. Key features include:

  - Automated user creation and management
  - Customizable password rotation policies with AWS Lambda integration
  - Role-based access control with granular permissions
  - Support for project and cluster-level scopes
  - AWS KMS integration for secure credential storage
  - Custom connection string generation
  - Compliance-ready password management

  The module is designed to maintain security best practices while providing flexibility in user access management across MongoDB Atlas environments.

# How to use this project
usage: |-
  ## Requirements
  - Terraform >= 1.0
  - MongoDB Atlas Account
  - MongoDB Atlas API Keys
  - AWS Account (for KMS and Lambda features)

  ## Module Configuration

  ### Basic Configuration
  ```hcl
  module "mongodb_users" {
    source = "cloudopsworks/terraform-module-mongoatlas-users"

    name_prefix = "prod"
    project_id = "5f7c8..."

    users = {
      "app_user" = {
        roles = [
          {
            role_name = "readWrite"
            database_name = "application"
          }
        ]
        password_rotation_period = 90
      }
    }
    password_rotation_period = 30
    secrets_kms_key_id = "alias/mongodb-users"
  }
  ```

  ### Available Variables

  | Variable | Description | Type | Default |
  |----------|-------------|------|---------|
  | name_prefix | Prefix for resource names | string | required |
  | project_id | MongoDB Atlas Project ID | string | "" |
  | project_name | MongoDB Atlas Project Name | string | "" |
  | users | User configurations map | map(any) | {} |
  | password_rotation_period | Default rotation period in days | number | 90 |
  | secrets_kms_key_id | AWS KMS key for encryption | string | null |
  | rotate_immediately | Trigger immediate rotation | bool | false |
  | force_reset | Force password reset | bool | false |

# Example usage
examples: |-
  ## Basic Terragrunt Example
  ```hcl
  include "root" {
    path = find_in_parent_folders()
  }

  terraform {
    source = "git::https://github.com/cloudopsworks/terraform-module-mongoatlas-users.git?ref=v1.0.0"
  }

  inputs = {
    name_prefix = "prod"
    project_id = "5f7c8..."

    users = {
      "admin" = {
        roles = [
          {
            role_name = "atlasAdmin"
            database_name = "admin"
          }
        ]
        password_rotation_period = 60
      }
      "reader" = {
        roles = [
          {
            role_name = "read"
            database_name = "reporting"
          }
        ]
        password_rotation_period = 90
      }
    }
    password_rotation_period = 30
    secrets_kms_key_id = "alias/mongodb-users"
  }
  ```

  ## Advanced Configuration Example
  ```hcl
  inputs = {
    name_prefix = "staging"
    project_id = "5f7c8..."

    users = {
      "service_account" = {
        username = "svc-app1"
        roles = [
          {
            role_name = "readWrite"
            database_name = "application"
            collection_name = "orders"
          }
        ]
        scopes = [
          {
            name = "cluster-1"
            type = "CLUSTER"
          }
        ]
        connection_strings = {
          enabled = true
          cluster = "cluster-1"
          database_name = "application"
        }
      }
    }
    rotate_immediately = true
    rotation_lambda_name = "mongodb-password-rotator"
    rotation_duration = "2h"
  }
  ```

# How to get started quickly
quickstart: |-
  1. Prerequisites:
     - MongoDB Atlas Account and API Keys
     - AWS Account (for KMS and Lambda features)
     - Terraform >= 1.0 installed

  2. Configure MongoDB Atlas API access:
     ```shell
     export MONGODB_ATLAS_PUBLIC_KEY="your-public-key"
     export MONGODB_ATLAS_PRIVATE_KEY="your-private-key"
     ```

  3. Create a new Terraform configuration file (main.tf):
     ```hcl
     module "mongodb_users" {
       source = "cloudopsworks/terraform-module-mongoatlas-users"

       name_prefix = "dev"
       project_id = "your-project-id"

       users = {
         "myuser" = {
           roles = [
             {
               role_name = "readWrite"
               database_name = "myapp"
             }
           ]
         }
       }
       password_rotation_period = 30
       secrets_kms_key_id = "alias/mongodb-users"
     }
     ```

  4. Initialize and apply:
     ```shell
     terraform init
     terraform plan
     terraform apply
     ```

  5. Access user credentials:
     - Credentials are stored in AWS Secrets Manager
     - Use AWS CLI or SDK to retrieve credentials
     - Rotation will occur automatically based on configured period

include:
  - "docs/targets.md"
  - "docs/terraform.md"

contributors:
  - name: "Cristian Beraha"
    github: "berahac"